#!/bin/sh -e
#
# Send stdin to a channel.
#
# Usage: jji <channel>
#
# Commands can be executed by prefixing them with a '/'.  Typing two
# slashes allows sending of messages with a slash in the beginning.
# The channel can be changed using `/channel <channel>`.  Omitting the
# channel argument, switches to the previously set channel.  The shorter
# `/chan`or `/c` can also be used.

arg0=${0##*/}
fifo=${IRC_DIR:-$HOME/irc}/${IRC_HOST:-irc.freenode.org}/in

! [ "$1" ] && {
	printf '%s: missing channel argument\n' "$arg0" >&2
	exit 1
}

if ! [ -p "$fifo" ] || ! [ -w "$fifo" ]; then
	printf '%s: not a named pipe or not writeable: %s\n' \
		"$arg0" "$fifo" >&2
	exit 1
fi

chan=$1
last_chan=$1

prompt() { [ -t 0 ] && printf '\033[37m%s\033[0m> ' "$chan" >&2 || :; }

while prompt "$chan" && IFS= read -r line || [ -n "$line" ]; do
	case $line in
		/channel\ *[!\ ]*|/chan\ *[!\ ]*|/c\ *[!\ ]*)
			# Strip trailing whitespace.
			line=${line%%${line##*[! ]}}

			[ "${line##* }" != "$chan" ] && {
				last_chan=$chan
				chan=${line##* }
			}
			continue
		;;

		/channel|/chan|/c|/channel\ *|/chan\ *|/c\ *)
			tmp=$chan
			chan=$last_chan
			last_chan=$tmp
			continue
		;;

		"")
			continue
		;;

		/[!/]*) line=${line#?} ;;
		*) line="msg $chan $line" ;;
	esac
	printf %s\\n "$line"
done >"$fifo"
